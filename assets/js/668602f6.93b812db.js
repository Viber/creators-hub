"use strict";(self.webpackChunkcreators_hub=self.webpackChunkcreators_hub||[]).push([[2657],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>b});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),d=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},u=function(e){var t=d(e.components);return n.createElement(l.Provider,{value:t},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),c=d(r),m=a,b=c["".concat(l,".").concat(m)]||c[m]||p[m]||o;return r?n.createElement(b,s(s({ref:t},u),{},{components:r})):n.createElement(b,s({ref:t},u))}));function b(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,s=new Array(o);s[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[c]="string"==typeof e?e:a,s[1]=i;for(var d=2;d<o;d++)s[d]=r[d];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},9975:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>d});var n=r(7462),a=(r(7294),r(3905));const o={sidebar_label:"Introduction",sidebar_position:1},s=void 0,i={unversionedId:"bots-api/data-models/intro",id:"bots-api/data-models/intro",title:"intro",description:"Introduction",source:"@site/docs/bots-api/data-models/intro.md",sourceDirName:"bots-api/data-models",slug:"/bots-api/data-models/intro",permalink:"/hub/docs/bots-api/data-models/intro",draft:!1,editUrl:"https://github.com/Viber/creators-hub/edit/main/docs/bots-api/data-models/intro.md",tags:[],version:"current",lastUpdatedBy:"Or Chen",lastUpdatedAt:1676986313,formattedLastUpdatedAt:"Feb 21, 2023",sidebarPosition:1,frontMatter:{sidebar_label:"Introduction",sidebar_position:1},sidebar:"botsAPISidebar",previous:{title:"Send Payment Request",permalink:"/hub/docs/bots-api/resources/pay/send-payment-request"},next:{title:"Message",permalink:"/hub/docs/bots-api/data-models/message"}},l={},d=[{value:"Introduction",id:"introduction",level:2},{value:"The Platform Data Models",id:"the-platform-data-models",level:2}],u={toc:d},c="wrapper";function p(e){let{components:t,...r}=e;return(0,a.kt)(c,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"introduction"},"Introduction"),(0,a.kt)("p",null,"In the Viber bots API, data models are used to define the structure and format of the data",(0,a.kt)("br",null),"\nexchanged between the Viber server and your bot. These models provide a standardized",(0,a.kt)("br",null),"\nway of representing various types of information, such as messages, user profiles, and",(0,a.kt)("br",null),"\npayment information. By following the data models defined in this section, you can ensure that your",(0,a.kt)("br",null),"\nbot communicates with the Viber server in a consistent and predictable manner. This",(0,a.kt)("br",null),"\nsection provides detailed descriptions of the available data models, along with examples",(0,a.kt)("br",null),"\nof how to use them in your bot code."),(0,a.kt)("h2",{id:"the-platform-data-models"},"The Platform Data Models"),(0,a.kt)("p",null,"The platform uses the following data models for communication with your bot:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"./message"},"Message")," - The message data model is used to represent all types of messages that can be sent to a user."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"./subscriber"},"Subscriber")," - The subscriber data model is used to represent a user who has subscribed to your bot."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"./payment-status"},"Payment Status")," - The payment status data model is used to represent the status of a payment transaction.")))}p.isMDXComponent=!0}}]);